buildscript {
    ext {
        kotlin_version = '1.8.0'
        typescript_gen_version = '2.19.577'
        guava_version = '31.1-jre'
        mybatis_plus_version = "3.4.2"
        global_version = '1.1.6'
        aliyun_repository = 'https://maven.aliyun.com/nexus/content/groups/public/'
        kotlin_jackson_module_version = '2.13.3'
        swagger_version = '1.4.3'
        springboot_version = '2.7.0'
    }
    repositories {
        mavenLocal()
        maven { url "https://maven.aliyun.com/nexus/content/groups/public" }
        maven { url "https://maven.aliyun.com/nexus/content/repositories/gradle-plugin" }
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:$springboot_version")
        classpath("cz.habarta.typescript-generator:typescript-generator-gradle-plugin:$typescript_gen_version")
        classpath "cz.habarta.typescript-generator:typescript-generator-spring:$typescript_gen_version"
        classpath("org.jetbrains.kotlin:kotlin-allopen:$kotlin_version")
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.8.0"
        classpath "gradle.plugin.com.hierynomus.gradle.plugins:license-gradle-plugin:0.16.1"
    }

}
plugins {
//    id 'org.springframework.boot' version '2.7.0.RELEASE'
//    id("org.springframework.boot") version "2.7.0"
//    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

allprojects {
    apply plugin: 'kotlin'
    apply plugin: 'kotlin-spring'
    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'idea'
    apply plugin: 'io.spring.dependency-management'

    group = 'com.uliian'
    version = global_version
    sourceCompatibility = '1.8'

    test {
        useJUnitPlatform()
    }

    compileKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }
    compileTestKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }

    repositories {
        mavenLocal()
        maven { url aliyun_repository }
        mavenCentral()
    }

    dependencies {
        testImplementation group: 'org.jetbrains.kotlin', name: 'kotlin-test-junit5', version: kotlin_version
//        testImplementation("org.junit.jupiter:junit-jupiter:$junit_verion")
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    }
}

subprojects {
    if(!project.name.contains("demo")) {
        apply from: "${project.rootDir}${File.separator}upload.gradle"
    }
    dependencies {
        api "org.springframework.boot:spring-boot-starter-web:$springboot_version"
        api('com.uliian:uliian-commons:1.+')
        api "org.springframework.boot:spring-boot-starter-aop:$springboot_version"

        api "com.google.guava:guava:$guava_version"
        testImplementation("org.springframework.boot:spring-boot-starter-test:$springboot_version") {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
        api "com.fasterxml.jackson.module:jackson-module-kotlin:$kotlin_jackson_module_version"
    }
}


